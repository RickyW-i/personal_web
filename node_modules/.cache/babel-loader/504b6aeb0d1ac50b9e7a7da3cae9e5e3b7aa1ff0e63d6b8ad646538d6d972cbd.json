{"ast":null,"code":"var _jsxFileName = \"/Users/rickywei/Documents/portfolio/src/ColorModeSwitcher.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useColorMode, useColorModeValue, IconButton, Box, Button } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ColorModeSwitcher = props => {\n  _s();\n  const {\n    toggleColorMode\n  } = useColorMode();\n  const bg = useColorModeValue('red.500', 'red.200');\n  const color = useColorModeValue('white', 'red.800');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mb: 4,\n      bg: bg,\n      color: color,\n      children: \"This box's style will change based on the color mode.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      size: \"sm\",\n      onClick: toggleColorMode,\n      children: \"Toggle Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ColorModeSwitcher, \"yoZ0+7Wm7xZzevCwz8uDHPFgR0U=\", false, function () {\n  return [useColorMode, useColorModeValue, useColorModeValue];\n});\n_c = ColorModeSwitcher;\nvar _c;\n$RefreshReg$(_c, \"ColorModeSwitcher\");","map":{"version":3,"names":["React","useColorMode","useColorModeValue","IconButton","Box","Button","FaMoon","FaSun","jsxDEV","_jsxDEV","Fragment","_Fragment","ColorModeSwitcher","props","_s","toggleColorMode","bg","color","children","mb","fileName","_jsxFileName","lineNumber","columnNumber","size","onClick","_c","$RefreshReg$"],"sources":["/Users/rickywei/Documents/portfolio/src/ColorModeSwitcher.js"],"sourcesContent":["import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton ,Box, Button} from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();  \n  const bg = useColorModeValue('red.500', 'red.200')\n  const color = useColorModeValue('white', 'red.800')\n\n  return (\n    <>\n      <Box mb={4} bg={bg} color={color}>\n        This box's style will change based on the color mode.\n      </Box>\n      <Button size='sm' onClick={toggleColorMode}>\n        Toggle Mode\n      </Button>\n    </>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,iBAAiB,EAAEC,UAAU,EAAEC,GAAG,EAAEC,MAAM,QAAO,kBAAkB;AAC1F,SAASC,MAAM,EAAEC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,OAAO,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;EAAAC,EAAA;EACxC,MAAM;IAAEC;EAAgB,CAAC,GAAGd,YAAY,CAAC,CAAC;EAC1C,MAAMe,EAAE,GAAGd,iBAAiB,CAAC,SAAS,EAAE,SAAS,CAAC;EAClD,MAAMe,KAAK,GAAGf,iBAAiB,CAAC,OAAO,EAAE,SAAS,CAAC;EAEnD,oBACEO,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACET,OAAA,CAACL,GAAG;MAACe,EAAE,EAAE,CAAE;MAACH,EAAE,EAAEA,EAAG;MAACC,KAAK,EAAEA,KAAM;MAAAC,QAAA,EAAC;IAElC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNd,OAAA,CAACJ,MAAM;MAACmB,IAAI,EAAC,IAAI;MAACC,OAAO,EAAEV,eAAgB;MAAAG,QAAA,EAAC;IAE5C;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACT,CAAC;AAEP,CAAC;AAACT,EAAA,CAfWF,iBAAiB;EAAA,QACAX,YAAY,EAC7BC,iBAAiB,EACdA,iBAAiB;AAAA;AAAAwB,EAAA,GAHpBd,iBAAiB;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}